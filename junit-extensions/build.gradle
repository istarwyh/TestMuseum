plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'net.saliman.properties' version '1.5.1'
    id 'com.github.breadmoirai.github-release' version '2.2.12'
}

ext["signing.keyId"] = findProperty("signing.keyId")
ext["signing.password"] = findProperty("signing.password")
ext["signing.secretKeyRingFile"] = findProperty("signing.secretKeyRingFile")
ext["ossrhUsername"] = findProperty("ossrhUsername")
ext["ossrhPassword"] = findProperty("ossrhPassword")
ext["repoSourceCodeUrl"] = 'https://github.com/istarwyh/TestMuseum'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}


tasks.withType(JavaCompile).configureEach {
    options.compilerArgs = []
}

group = 'io.github.istarwyh'
//archivesName = 'junit-extensions'
version = rootProject.ext.initSnapshotVersion
description = 'A JUnit extension library'

// 希望gradle jar 可以同时把 pom.xml 生成到 jar中，但是这个好像不行
shadowJar {
    archiveBaseName.set('junit-extensions')
    archiveClassifier.set('')
    archiveVersion.set('1.0.0-SNAPSHOT')
}


dependencies {
    implementation(
        "org.javassist:javassist:${javassistVersion}",
        "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
        "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
        "org.jeasy:easy-random-core:${olderEasyRandomVersion}",
        "org.mockito:mockito-core:${olderMockitoJunit5Version}"
    )


    testImplementation(
        "org.jeasy:easy-random-core:${olderEasyRandomVersion}"
    )
}
configurations.configureEach {
    resolutionStrategy {
        force "org.mockito:mockito-junit-jupiter:${olderMockitoJunit5Version}"
    }
}



// 2024年6月1日,maven publish 因为暂停申请了 ossrh 的账号,目前都改手动上传了:
// If you are not currently publishing artifacts to Maven Central on an oss.sonatype.org host,
// and if you are comfortable with manually publishing components on https://central.sonatype.com,
// then keep reading for a step-by-step guide: https://central.sonatype.org/publish-ea/publish-ea-guide/
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'JUnit Extension'
                description = 'A JUnit extension library'
                url = 'https://github.com/istarwyh/TestMuseum'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'istarwyh'
                        name = 'xiaohui'
                        email = 'yihui-wang@qq.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/istarwyh/TestMuseum.git'
                    developerConnection = 'scm:git:ssh://github.com/istarwyh/TestMuseum.git'
                    url = 'https://github.com/istarwyh/TestMuseum'
                }
            }
        }
    }


    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }


    tasks.register('javadocJar', Jar) {
        archiveClassifier.set('javadoc')
        from javadoc
    }


    tasks.register('sourcesJar', Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    /**
     * javadocJar
     */
    artifacts {
        archives  sourcesJar
    }
}


signing {
    sign publishing.publications.mavenJava
}
