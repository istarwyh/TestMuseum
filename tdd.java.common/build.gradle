plugins {
    id 'java-library'
}

group 'istarwyh'
version '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://repo.huaweicloud.com/repository/maven" }
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
    junitPlatformVersion = '1.0.0'
    lombokVersion = '1.18.30'
    slf4jVersion = '1.7.36'
    logbackClassicVersion = '1.4.14'
    jetbrainsAnnotationVersion = '24.0.1'
    javassistVersion = '3.29.2-GA'
    istarwyhInitialVersion = '0.2.7'
    mockitoJunit5Version = '5.11.0'
    fastjson2Version = '2.0.25'
    guavaVersion = '33.0.0-jre'
    mapstructVersion = '1.5.3.Final'
    apacheCommonsLang3Version= '3.13.0'
    easyRandomVersion='5.0.0'
}


dependencies {
    /**************************************************  SRC  ************************************************************/

    compileOnly(
            "org.projectlombok:lombok:${lombokVersion}"
    )

    implementation(
            // 	logback-classic includes logback-core , slf4j-api
            "org.jetbrains:annotations:${jetbrainsAnnotationVersion}",
            "ch.qos.logback:logback-classic:${logbackClassicVersion}",
            "org.javassist:javassist:${javassistVersion}",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
            "com.alibaba.fastjson2:fastjson2:${fastjson2Version}",
            "com.google.guava:guava:${guavaVersion}",
            "org.mapstruct:mapstruct:${mapstructVersion}",
            "org.apache.commons:commons-lang3:${apacheCommonsLang3Version}",
            "org.jeasy:easy-random-core:${easyRandomVersion}"
    )

    annotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
            "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    )

/**************************************************  TEST  ************************************************************/

    testCompileOnly(
            "org.projectlombok:lombok:${lombokVersion}"
    )

    testImplementation(
            // JUnit Jupiter API and TestEngine and ParameterizedTest
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
            "org.junit.vintage:junit-vintage-engine:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
            "org.mockito:mockito-junit-jupiter:${mockitoJunit5Version}",

            "ch.qos.logback:logback-classic:${logbackClassicVersion}",
            "org.javassist:javassist:${javassistVersion}",
            "org.apache.commons:commons-lang3:${apacheCommonsLang3Version}",
            "org.mapstruct:mapstruct:${mapstructVersion}",
            "org.jeasy:easy-random-core:${easyRandomVersion}"
    )
//    testImplementation( "com.github.istarwyh:Initial:${istarwyhInitialVersion}"){
//        exclude group: "com.github.istarwyh", module: "Initial"
//    }

    testAnnotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
            "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    )
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

defaultTasks 'clean', 'test'

test {
    useJUnitPlatform()
}